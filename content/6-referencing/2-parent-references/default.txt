Title: Parent reference

----

Text: 

# Parent reference
Every element has a reference to its parent with the `parent()` method:

## parent() _within the svg document_

`returns` __`SVG.Element`__

```javascript
element.parent()
```

Alternatively a class or css selector can be passed as the first argument:

```javascript
var draw   = SVG('drawing')
var nested = draw.nested().addClass('test')
var group  = nested.group()
var rect   = group.rect(100, 100)

rect.parent()           //-> returns group
rect.parent(SVG.Doc)    //-> returns draw
rect.parent(SVG.Nested) //-> returns nested
rect.parent(SVG.G)      //-> returns group
rect.parent('.test')    //-> returns nested
```

## parent() _on the topmost svg document_

`returns` __`HTMLNode`__

```javascript
var draw = SVG('drawing')

draw.parent() //-> returns the wrappig html element with id 'drawing'
```

## doc()

`returns` __`SVG.Doc`__

For retrieving the root svg you can use `doc()`

```javascript
var draw = SVG('drawing')
var rect = draw.rect(100, 100)

rect.doc() //-> returns draw
```

## parents()

`returns` __`Array`__

To get all ancestors of the element filtered by type or css selector (see `parent()` method)

```javascript
var group1 = draw.group().addClass('test')
  , group2 = group1.group()
  , rect   = group2.rect(100,100)

rect.parents()        // returns [group1, group2, draw]
rect.parents('.test') // returns [group1]
rect.parents(SVG.G)   // returns [group1, group2]
```

----

Description: Every element has a reference to its parent with the parent() method. Alternatively a class or css selector can be passed as the first argument.