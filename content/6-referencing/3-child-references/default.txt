Title: Child references

----

Text: 

# Child references

## first()

`returns` __`SVG.Element`__

To get the first child of a parent element:

```javascript
draw.first()
```

## last()

`returns` __`SVG.Element`__

To get the last child of a parent element:

```javascript
draw.last()
```

## children()

`returns` __`array`__

An array of all children will can be retrieves with the `children` method:

```javascript
draw.children()
```

## each()

`returns` __`itself`__

The `each()` allows you to iterate over the all children of a parent element:

```javascript
draw.each(function(i, children) {
  this.fill({ color: '#f06' })
})
```

Deep traversing is also possible by passing true as the second argument:

```javascript
// draw.each(block, deep)
draw.each(function(i, children) {
  this.fill({ color: '#f06' })
}, true)
```

Note that `this` refers to the current child element.

## has()

`returns` __`boolean`__

Checking the existence of an element within a parent:

```javascript
var rect  = draw.rect(100, 50)
var group = draw.group()

draw.has(rect)  //-> returns true
group.has(rect) //-> returns false
```

## index()

`returns` __`number`__

Returns the index of given element and returns -1 when it is not a child:

```javascript
var rect  = draw.rect(100, 50)
var group = draw.group()

draw.index(rect)  //-> returns 0
group.index(rect) //-> returns -1
```

## get()

`returns` __`SVG.Element`__

Get an element on a given position in the children array:

```javascript
var rect   = draw.rect(20, 30)
var circle = draw.circle(50)

draw.get(0) //-> returns rect
draw.get(1) //-> returns circle
```

## clear()

`returns` __`itself`__

To remove all elements from a parent element:

```javascript
draw.clear()
```

----

Description: The each() allows you to iterate over the all children of a parent element. Checking the existence of an element within a parent is done with the has() method.