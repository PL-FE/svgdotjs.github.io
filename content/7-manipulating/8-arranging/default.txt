Title: Arranging

----

Text: 

# Arranging
You can arrange elements within their parent SVG document using the following methods.

## after()

`returns` __`itself`__

Insert an element after another:

```javascript
// inserts circle after rect
rect.after(circle)
```

## before()

`returns` __`itself`__

Insert an element before another:

```javascript
// inserts circle before rect
rect.before(circle)
```

## back()

`returns` __`itself`__

Move element to the back:

```javascript
rect.back()
```

## backward()

`returns` __`itself`__

Move element one step backward:

```javascript
rect.backward()
```

## front()

`returns` __`itself`__

Move element to the front:

```javascript
rect.front()
```

## forward()

`returns` __`itself`__

Move element one step forward:

```javascript
rect.forward()
```

## next()

`returns` __`SVG.Element`__

Get the next sibling:

```javascript
rect.next()
```

## position()

`returns` __`number`__

Get the position (a number) of rect between its siblings:

```javascript
rect.position()
```

## previous()

`returns` __`SVG.Element`__

Get the previous sibling:

```javascript
rect.previous()
```

## siblings()

`returns` __`array`__

The arrange.js module brings some additional methods. To get all siblings of rect, including rect itself:

```javascript
rect.siblings()
```

----

Description: You can arrange elements within their parent SVG document using the following methods. Move element to the front, to the back, backwards or forwards.