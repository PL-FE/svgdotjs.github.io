Title: Attributes

----

Text: 

# Attributes

## attr() _as setter_

`returns` __`itself`__<br>`animate` __`yes`__ `(only for numbers, arrays, colors, ...)`

Set a single attribute:
```javascript
rect.attr('x', 50)
```

Set multiple attributes at once:
```javascript
rect.attr({
  fill: '#f06'
, 'fill-opacity': 0.5
, stroke: '#000'
, 'stroke-width': 10
})
```

Set an attribute with a namespace:
```javascript
rect.attr('x', 50, 'http://www.w3.org/2000/svg')
```

Explicitly remove an attribute:
```javascript
rect.attr('fill', null)
```

## attr() _as getter_

`returns` __`value`__ `(string, number, ...)`

You can get and set an element's attributes directly using `attr()`.

Get a single attribute:
```javascript
var x = rect.attr('x')
```

Get all attributes as an object:

```javascript
var attributes = rect.attr()
```

<br>
# Syntactic sugar

## fill()

`returns` __`itself`__

The `fill()` method is a pretty alternative to the `attr()` method:

```javascript
rect.fill({ color: '#f06', opacity: 0.6 })
```

A single hex string will work as well:

```javascript
rect.fill('#f06')
```

Last but not least, you can also use an image as fill, simply by passing an image url:

```javascript
rect.fill('images/shade.jpg')
```

Or if you want more control over the size of the image, you can pass an image instance as well:

```javascript
rect.fill(draw.image('images/shade.jpg', 20, 20))
```

## stroke()

`returns` __`itself`__

The `stroke()` method is similar to `fill()`:

```javascript
rect.stroke({ color: '#f06', opacity: 0.6, width: 5 })
```

Like fill, a single hex string will work as well:

```javascript
rect.stroke('#f06')
```

Not unlike the `fill()` method, you can also use an image as stroke, simply by passing an image url:

```javascript
rect.stroke('images/shade.jpg')
```

Or if you want more control over the size of the image, you can pass an image instance as well:

```javascript
rect.stroke(draw.image('images/shade.jpg', 20, 20))
```

## opacity()

`returns` __`itself`__

To set the overall opacity of an element:

```javascript
rect.opacity(0.5)
```

----

Description: You can get and set an element's attributes directly using attr() or get all attributes as an object. Setting works with objects or individual  key value pairs.